Security

The system is not secure in all areas. It requires a username and password in order for a user to log in. The system successfully performs authentication against the LDAP repository. It does not allow users without the necessary authorisation to delete buzz spaces, but anyone can create a buzz space whether they are logged in or not. Only authorised users can add or remove admins. The system is also somewhat configurable, MIME types can be added, edited, and removed, but the system does not take authorisation level, or whether a user is logged in or not into account for these actions, anyone can perform these actions. Admin users cannot configure access to certain services such as who can create a space or who can post on certain levels.

The following screenshots provide some examples of the abovementioned actions.

The log in user interface:

//login.png



Determine if the user is authorised to close the buzz space:
// isUserAuthorisedtoCloseBuzzSpace.png






Add constraint: img/jpg
//addConstraint

//addConstraint1.png


















Determine if the user can add an admin to a BuzzSpace:
//addAdmin.png



Auditability

The system is auditable. 
The system keeps a log of all the requests and responses. The requests does not have an id, but it does have a user id, a date/time stamp, it includes the request that was made, and it does not store any sensitive information.

For the responses, there is not an id for the log entry or a corresponding request entry, there is a date/time stamp, and there is no sensitive information included. Because the response entries does not have a way of indicating to which request it responded it can be difficult to make sense of the data or to trace errors.

The audit log can be accessed by humans and the system. 
//logFile.png



//logs.png


An example of requests and responses that are logged:
A BuzzSpace does not exist:
//buzzNotExistLog


Could not find space to remove:
//couldNotFindSpaceLog.png


Request to manage space COS9:
//manageSpaceLog


Response that states a space was closed successfully:
//closedSpaceLog.png



Testability

Only some modules included unit tests. For example, threads and spaces:
Unit testing for threads:
//unit_tests.png


Integration tests are also performed in some instances. 

In this instance authorisation is checked outside of the module that is was created in.
//integration.png


For both the unit tests and the integration tests it is not always verified that all the pre-conditions are met before a service is provided, or that all the post-conditions are met. 

The system is thus only testable in some cases, but there is a lot of potential to add further test cases as the system is set up in such a way that makes testing more convenient.

